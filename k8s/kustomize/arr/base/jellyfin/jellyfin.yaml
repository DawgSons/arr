apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: ghcr.io/hotio/jellyfin:latest
        ports:
        - containerPort: 8096
        env:
        - name: PUID
          valueFrom:
            configMapKeyRef:
              name: arr-stack-config
              key: PUID
        - name: PGID
          valueFrom:
            configMapKeyRef:
              name: arr-stack-config
              key: PGID
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: arr-stack-config
              key: TZ
        volumeMounts:
        - name: config
          mountPath: /config
          subPath: jellyfin/config
        - name: cache
          mountPath: /cache
          subPath: jellyfin/cache
        - name: media
          mountPath: /data/usenet/media
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        supplementalGroups:
        - 107  # render group
        - 44   # video group
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: appdata-pvc
      - name: cache
        persistentVolumeClaim:
          claimName: appdata-pvc
      - name: media
        persistentVolumeClaim:
          claimName: media-storage-pvc
      - name: localtime
        hostPath:
          path: /etc/localtime
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: media-server
spec:
  selector:
    app: jellyfin
  ports:
  - protocol: TCP
    port: 8096
    targetPort: 8096
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: media-server
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  tls:
  - hosts:
    - $(JELLYFIN_HOST)
    secretName: jellyfin-tls
  rules:
  - host: $(JELLYFIN_HOST)
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin
            port:
              number: 8096
